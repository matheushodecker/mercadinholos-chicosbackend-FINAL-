# Generated by Django 5.1.7 on 2025-06-16 23:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_fabricante_remove_fornecedor_inscricao_estadual'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do cargo.', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, help_text='Descrição do cargo.')),
                ('salario_base', models.DecimalField(decimal_places=2, help_text='Salário base do cargo.', max_digits=10)),
                ('comissao_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Percentual de comissão.', max_digits=5)),
                ('ativo', models.BooleanField(default=True, help_text='Cargo ativo.')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da categoria.', max_length=100)),
                ('descricao', models.TextField(blank=True, help_text='Descrição da categoria.')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se a categoria está ativa.')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now, help_text='Data de criação da categoria.')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do cliente.', max_length=255)),
                ('tipo_pessoa', models.CharField(choices=[('F', 'Pessoa Física'), ('J', 'Pessoa Jurídica')], default='F', help_text='Tipo de pessoa.', max_length=1)),
                ('cpf_cnpj', models.CharField(help_text='CPF ou CNPJ do cliente.', max_length=18, unique=True)),
                ('rg_ie', models.CharField(blank=True, help_text='RG ou Inscrição Estadual.', max_length=20, null=True)),
                ('endereco', models.CharField(blank=True, help_text='Endereço do cliente.', max_length=255)),
                ('bairro', models.CharField(blank=True, help_text='Bairro do cliente.', max_length=100)),
                ('cidade', models.CharField(blank=True, help_text='Cidade do cliente.', max_length=100)),
                ('estado', models.CharField(blank=True, help_text='Estado do cliente.', max_length=2)),
                ('cep', models.CharField(blank=True, help_text='CEP do cliente.', max_length=9)),
                ('telefone', models.CharField(blank=True, help_text='Telefone do cliente.', max_length=20)),
                ('celular', models.CharField(blank=True, help_text='Celular do cliente.', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Email do cliente.', max_length=255)),
                ('data_nascimento', models.DateField(blank=True, help_text='Data de nascimento.', null=True)),
                ('limite_credito', models.DecimalField(decimal_places=2, default=0, help_text='Limite de crédito.', max_digits=10)),
                ('ativo', models.BooleanField(default=True, help_text='Cliente ativo.')),
                ('data_cadastro', models.DateTimeField(default=django.utils.timezone.now)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o cliente.')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_pedido', models.CharField(help_text='Número do pedido de compra.', max_length=50, unique=True)),
                ('data_pedido', models.DateTimeField(default=django.utils.timezone.now, help_text='Data do pedido.')),
                ('data_entrega_prevista', models.DateField(help_text='Data prevista para entrega.')),
                ('data_entrega_real', models.DateField(blank=True, help_text='Data real de entrega.', null=True)),
                ('valor_total', models.DecimalField(decimal_places=2, default=0, help_text='Valor total da compra.', max_digits=12)),
                ('desconto', models.DecimalField(decimal_places=2, default=0, help_text='Desconto aplicado.', max_digits=10)),
                ('frete', models.DecimalField(decimal_places=2, default=0, help_text='Valor do frete.', max_digits=10)),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('A', 'Aprovada'), ('R', 'Recebida'), ('C', 'Cancelada')], default='P', help_text='Status da compra.', max_length=1)),
                ('observacoes', models.TextField(blank=True, help_text='Observações da compra.')),
            ],
            options={
                'verbose_name': 'Compra',
                'verbose_name_plural': 'Compras',
                'ordering': ['-data_pedido'],
            },
        ),
        migrations.CreateModel(
            name='Estoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_atual', models.IntegerField(default=0, help_text='Quantidade atual em estoque.')),
                ('quantidade_minima', models.IntegerField(default=5, help_text='Quantidade mínima em estoque.')),
                ('quantidade_maxima', models.IntegerField(default=1000, help_text='Quantidade máxima em estoque.')),
                ('localizacao', models.CharField(blank=True, help_text='Localização no estoque.', max_length=100)),
                ('data_ultima_movimentacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Estoque',
                'verbose_name_plural': 'Estoques',
            },
        ),
        migrations.CreateModel(
            name='FormaPagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da forma de pagamento.', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, help_text='Descrição da forma de pagamento.')),
                ('taxa_percentual', models.DecimalField(decimal_places=2, default=0, help_text='Taxa percentual.', max_digits=5)),
                ('taxa_fixa', models.DecimalField(decimal_places=2, default=0, help_text='Taxa fixa.', max_digits=10)),
                ('prazo_recebimento', models.IntegerField(default=0, help_text='Prazo para recebimento em dias.')),
                ('ativo', models.BooleanField(default=True, help_text='Forma de pagamento ativa.')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Forma de Pagamento',
                'verbose_name_plural': 'Formas de Pagamento',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do funcionário.', max_length=255)),
                ('cpf', models.CharField(help_text='CPF do funcionário.', max_length=14, unique=True)),
                ('rg', models.CharField(help_text='RG do funcionário.', max_length=20)),
                ('data_nascimento', models.DateField(help_text='Data de nascimento.')),
                ('estado_civil', models.CharField(choices=[('S', 'Solteiro'), ('C', 'Casado'), ('D', 'Divorciado'), ('V', 'Viúvo')], help_text='Estado civil.', max_length=1)),
                ('endereco', models.CharField(help_text='Endereço do funcionário.', max_length=255)),
                ('bairro', models.CharField(help_text='Bairro do funcionário.', max_length=100)),
                ('cidade', models.CharField(help_text='Cidade do funcionário.', max_length=100)),
                ('estado', models.CharField(help_text='Estado do funcionário.', max_length=2)),
                ('cep', models.CharField(help_text='CEP do funcionário.', max_length=9)),
                ('telefone', models.CharField(blank=True, help_text='Telefone do funcionário.', max_length=20)),
                ('celular', models.CharField(help_text='Celular do funcionário.', max_length=20)),
                ('email', models.EmailField(help_text='Email do funcionário.', max_length=255)),
                ('salario', models.DecimalField(decimal_places=2, help_text='Salário atual.', max_digits=10)),
                ('data_admissao', models.DateField(help_text='Data de admissão.')),
                ('data_demissao', models.DateField(blank=True, help_text='Data de demissão.', null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Funcionário ativo.')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o funcionário.')),
                ('cargo', models.ForeignKey(help_text='Cargo do funcionário.', on_delete=django.db.models.deletion.PROTECT, to='core.cargo')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ItemCompra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(help_text='Quantidade comprada.')),
                ('preco_unitario', models.DecimalField(decimal_places=2, help_text='Preço unitário de compra.', max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Subtotal do item.', max_digits=10)),
            ],
            options={
                'verbose_name': 'Item de Compra',
                'verbose_name_plural': 'Itens de Compra',
            },
        ),
        migrations.CreateModel(
            name='ItemVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(help_text='Quantidade vendida.')),
                ('preco_unitario', models.DecimalField(decimal_places=2, help_text='Preço unitário no momento da venda.', max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Subtotal do item.', max_digits=10)),
            ],
            options={
                'verbose_name': 'Item de Venda',
                'verbose_name_plural': 'Itens de Venda',
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_movimentacao', models.CharField(choices=[('E', 'Entrada'), ('S', 'Saída'), ('A', 'Ajuste'), ('T', 'Transferência')], help_text='Tipo de movimentação.', max_length=1)),
                ('quantidade', models.IntegerField(help_text='Quantidade movimentada.')),
                ('quantidade_anterior', models.IntegerField(help_text='Quantidade anterior.')),
                ('quantidade_atual', models.IntegerField(help_text='Quantidade atual após movimentação.')),
                ('motivo', models.CharField(help_text='Motivo da movimentação.', max_length=255)),
                ('data_movimentacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('observacoes', models.TextField(blank=True, help_text='Observações da movimentação.')),
                ('usuario', models.ForeignKey(help_text='Usuário responsável.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Movimentação de Estoque',
                'verbose_name_plural': 'Movimentações de Estoque',
                'ordering': ['-data_movimentacao'],
            },
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor', models.DecimalField(decimal_places=2, help_text='Valor do pagamento.', max_digits=10)),
                ('data_vencimento', models.DateField(help_text='Data de vencimento.')),
                ('data_recebimento', models.DateField(blank=True, help_text='Data de recebimento.', null=True)),
                ('status', models.CharField(choices=[('P', 'Pendente'), ('R', 'Recebido'), ('C', 'Cancelado')], default='P', help_text='Status do pagamento.', max_length=1)),
                ('observacoes', models.TextField(blank=True, help_text='Observações do pagamento.')),
                ('forma_pagamento', models.ForeignKey(help_text='Forma de pagamento.', on_delete=django.db.models.deletion.PROTECT, to='core.formapagamento')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-data_vencimento'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do produto.', max_length=200)),
                ('descricao', models.TextField(blank=True, help_text='Descrição do produto.')),
                ('codigo_barras', models.CharField(help_text='Código de barras único do produto.', max_length=50, unique=True)),
                ('preco_custo', models.DecimalField(decimal_places=2, help_text='Preço de custo do produto.', max_digits=10)),
                ('preco_venda', models.DecimalField(decimal_places=2, help_text='Preço de venda do produto.', max_digits=10)),
                ('estoque_atual', models.IntegerField(default=0, help_text='Quantidade atual em estoque.')),
                ('estoque_minimo', models.IntegerField(default=5, help_text='Quantidade mínima em estoque.')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o produto está ativo.')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(help_text='Categoria do produto.', on_delete=django.db.models.deletion.CASCADE, to='core.categoria')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ProdutoPromocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preco_promocional', models.DecimalField(decimal_places=2, help_text='Preço promocional.', max_digits=10)),
            ],
            options={
                'verbose_name': 'Produto em Promoção',
                'verbose_name_plural': 'Produtos em Promoção',
            },
        ),
        migrations.CreateModel(
            name='Promocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da promoção.', max_length=255)),
                ('descricao', models.TextField(blank=True, help_text='Descrição da promoção.')),
                ('tipo_desconto', models.CharField(choices=[('P', 'Percentual'), ('V', 'Valor Fixo')], help_text='Tipo de desconto.', max_length=1)),
                ('valor_desconto', models.DecimalField(decimal_places=2, help_text='Valor do desconto.', max_digits=10)),
                ('data_inicio', models.DateTimeField(help_text='Data de início da promoção.')),
                ('data_fim', models.DateTimeField(help_text='Data de fim da promoção.')),
                ('ativo', models.BooleanField(default=True, help_text='Promoção ativa.')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Promoção',
                'verbose_name_plural': 'Promoções',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='RelatorioEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do relatório.', max_length=255)),
                ('total_produtos', models.IntegerField(help_text='Total de produtos.')),
                ('produtos_estoque_baixo', models.IntegerField(help_text='Produtos com estoque baixo.')),
                ('valor_total_estoque', models.DecimalField(decimal_places=2, help_text='Valor total do estoque.', max_digits=12)),
                ('data_geracao', models.DateTimeField(default=django.utils.timezone.now)),
                ('observacoes', models.TextField(blank=True, help_text='Observações do relatório.')),
                ('usuario_gerador', models.ForeignKey(help_text='Usuário que gerou o relatório.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relatório de Estoque',
                'verbose_name_plural': 'Relatórios de Estoque',
                'ordering': ['-data_geracao'],
            },
        ),
        migrations.CreateModel(
            name='RelatorioVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do relatório.', max_length=255)),
                ('data_inicio', models.DateField(help_text='Data de início do período.')),
                ('data_fim', models.DateField(help_text='Data de fim do período.')),
                ('total_vendas', models.DecimalField(decimal_places=2, help_text='Total de vendas.', max_digits=12)),
                ('quantidade_vendas', models.IntegerField(help_text='Quantidade de vendas.')),
                ('ticket_medio', models.DecimalField(decimal_places=2, help_text='Ticket médio.', max_digits=10)),
                ('data_geracao', models.DateTimeField(default=django.utils.timezone.now)),
                ('observacoes', models.TextField(blank=True, help_text='Observações do relatório.')),
                ('usuario_gerador', models.ForeignKey(help_text='Usuário que gerou o relatório.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Relatório de Venda',
                'verbose_name_plural': 'Relatórios de Vendas',
                'ordering': ['-data_geracao'],
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_venda', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora da venda.')),
                ('total', models.DecimalField(decimal_places=2, default=0, help_text='Valor total da venda.', max_digits=10)),
                ('desconto', models.DecimalField(decimal_places=2, default=0, help_text='Desconto aplicado.', max_digits=10)),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada')], default='pendente', help_text='Status da venda.', max_length=20)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a venda.')),
                ('usuario', models.ForeignKey(help_text='Usuário que realizou a venda.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
                'ordering': ['-data_venda'],
            },
        ),
        migrations.DeleteModel(
            name='Fabricante',
        ),
        migrations.RemoveField(
            model_name='fornecedor',
            name='cnpj',
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='ativo',
            field=models.BooleanField(default=True, help_text='Fornecedor ativo.'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='celular',
            field=models.CharField(blank=True, help_text='Celular.', max_length=20),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='cnpj_cpf',
            field=models.CharField(blank=True, help_text='CNPJ ou CPF.', max_length=18, unique=True),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='condicoes_pagamento',
            field=models.TextField(blank=True, help_text='Condições de pagamento.'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='inscricao_estadual',
            field=models.CharField(blank=True, help_text='Inscrição Estadual.', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='limite_credito',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Limite de crédito.', max_digits=12),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='observacoes',
            field=models.TextField(blank=True, help_text='Observações gerais.'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='prazo_pagamento',
            field=models.IntegerField(default=30, help_text='Prazo de pagamento em dias.'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='razao_social',
            field=models.CharField(blank=True, help_text='Razão social.', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='site',
            field=models.URLField(blank=True, help_text='Site da empresa.'),
        ),
        migrations.AddField(
            model_name='fornecedor',
            name='tipo_pessoa',
            field=models.CharField(choices=[('F', 'Pessoa Física'), ('J', 'Pessoa Jurídica')], default='J', help_text='Tipo de pessoa.', max_length=1),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='bairro',
            field=models.CharField(blank=True, help_text='Bairro.', max_length=100),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='cep',
            field=models.CharField(blank=True, help_text='CEP no formato XXXXX-XXX.', max_length=9),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='cidade',
            field=models.CharField(blank=True, help_text='Cidade.', max_length=100),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='data_cadastro',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='Data de cadastro.'),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='email',
            field=models.EmailField(blank=True, help_text='Email principal.', max_length=255),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='endereco',
            field=models.CharField(blank=True, help_text='Endereço completo.', max_length=255),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='estado',
            field=models.CharField(blank=True, help_text='Sigla do estado (SC).', max_length=2),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='nome',
            field=models.CharField(blank=True, help_text='Nome comercial do fornecedor.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='nome_contato',
            field=models.CharField(blank=True, help_text='Nome do contato responsável.', max_length=100),
        ),
        migrations.AlterField(
            model_name='fornecedor',
            name='telefone',
            field=models.CharField(blank=True, help_text='Telefone principal.', max_length=20),
        ),
        migrations.AddField(
            model_name='compra',
            name='fornecedor',
            field=models.ForeignKey(help_text='Fornecedor da compra.', on_delete=django.db.models.deletion.PROTECT, to='core.fornecedor'),
        ),
        migrations.AddField(
            model_name='compra',
            name='usuario',
            field=models.ForeignKey(help_text='Usuário responsável pela compra.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itemcompra',
            name='compra',
            field=models.ForeignKey(help_text='Compra relacionada.', on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.compra'),
        ),
        migrations.AddField(
            model_name='produto',
            name='fornecedor',
            field=models.ForeignKey(help_text='Fornecedor do produto.', on_delete=django.db.models.deletion.CASCADE, to='core.fornecedor'),
        ),
        migrations.AddField(
            model_name='movimentacaoestoque',
            name='produto',
            field=models.ForeignKey(help_text='Produto movimentado.', on_delete=django.db.models.deletion.CASCADE, to='core.produto'),
        ),
        migrations.AddField(
            model_name='itemvenda',
            name='produto',
            field=models.ForeignKey(help_text='Produto vendido.', on_delete=django.db.models.deletion.CASCADE, to='core.produto'),
        ),
        migrations.AddField(
            model_name='itemcompra',
            name='produto',
            field=models.ForeignKey(help_text='Produto comprado.', on_delete=django.db.models.deletion.PROTECT, to='core.produto'),
        ),
        migrations.AddField(
            model_name='estoque',
            name='produto',
            field=models.OneToOneField(help_text='Produto relacionado.', on_delete=django.db.models.deletion.CASCADE, to='core.produto'),
        ),
        migrations.AddField(
            model_name='produtopromocao',
            name='produto',
            field=models.ForeignKey(help_text='Produto em promoção.', on_delete=django.db.models.deletion.CASCADE, related_name='promocoes', to='core.produto'),
        ),
        migrations.AddField(
            model_name='produtopromocao',
            name='promocao',
            field=models.ForeignKey(help_text='Promoção relacionada.', on_delete=django.db.models.deletion.CASCADE, related_name='produtos', to='core.promocao'),
        ),
        migrations.AddField(
            model_name='pagamento',
            name='venda',
            field=models.ForeignKey(help_text='Venda relacionada.', on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='core.venda'),
        ),
        migrations.AddField(
            model_name='itemvenda',
            name='venda',
            field=models.ForeignKey(help_text='Venda relacionada.', on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='core.venda'),
        ),
        migrations.AlterUniqueTogether(
            name='produtopromocao',
            unique_together={('promocao', 'produto')},
        ),
    ]
